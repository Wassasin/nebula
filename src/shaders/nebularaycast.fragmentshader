#version 130

in vec4 frag_texcoord;
in vec4 frag_pos;

uniform mat4 mvp;
uniform sampler2D tex;
uniform sampler3D volume_tex;
uniform float stepsize;

void main(void)
{
	vec2 texc = ((frag_pos.xy / frag_pos.w) + 1) / 2;	// find the right place to lookup in the backside buffer
	vec4 start = frag_texcoord;							// the start position of the ray is stored in the texturecoordinate
	vec4 back_position = texture2D(tex, texc);
	vec3 dir = vec3(0, 0, 0);
	
	dir.x = back_position.x - start.x;
	dir.y = back_position.y - start.y;
	dir.z = back_position.z - start.z;
	
	float len = length(dir.xyz);
	vec3 norm_dir = normalize(dir);
	float delta = stepsize;
	vec3 delta_dir = norm_dir * delta;
	float delta_dir_len = length(delta_dir);
	vec3 vec = start.xyz;
	vec4 col_acc = vec4(0, 0, 0, 0);
	float alpha_acc = 0;
	float length_acc = 0;
	
	vec4 color_sample;
	float alpha_sample;
	for(int i = 0; i < 450; ++i)
	{
		color_sample = texture3D(volume_tex, vec);
		alpha_sample = color_sample.a * stepsize;
		
		col_acc += (1.0 - alpha_acc) * color_sample * alpha_sample * 3;
		alpha_acc += alpha_sample;
		vec += delta_dir;
		length_acc += delta_dir_len;
		
		if(length_acc >= len || alpha_acc > 1.0)
			break; // Terminate if opacity > 1, or the ray is outside the volume
	}
	
	gl_FragColor = col_acc;
}
