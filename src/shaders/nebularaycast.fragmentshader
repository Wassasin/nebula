#version 130

#define stepsize 0.005

#define particle_density 2.0*stepsize
#define color_intensity 2.0

#define color_modifier (particle_density * color_intensity)

in vec4 frag_vertex;

uniform sampler2D frontface_tex;
uniform sampler3D volume_tex;

uniform int inside_volume;
uniform mat4 mvp;
uniform vec3 camerapos;

void main(void)
{
	vec3 front_vertex = vec3(0, 0, 0);

	if(inside_volume == 1)
		front_vertex = camerapos;
	else
	{
	    vec4 back_position = mvp * frag_vertex;
		vec2 texc = ((back_position.xy / back_position.w) + 1) * 0.5;
		front_vertex = texture2D(frontface_tex, texc).xyz;
	}
	
	vec4 front_position = mvp * vec4(front_vertex, 1.0);
	vec3 dir = frag_vertex.xyz - front_vertex;
	
	float len = length(dir.xyz);
	vec3 norm_dir = normalize(dir);
	vec3 delta_dir = norm_dir * stepsize;
	float delta_dir_len = length(delta_dir);
	
	vec3 vec = front_vertex;
	vec4 col_acc = vec4(0, 0, 0, 0);
	float alpha_res = 1.0;
	float length_acc = 0.0;
	
	int steps_tmp = int(len / delta_dir_len);
	
	for(int i = 0; i < steps_tmp; ++i)
	{
		vec4 color_sample = texture3D(volume_tex, vec);

	    col_acc += color_sample * (color_sample.a * alpha_res * color_modifier);
	    alpha_res -= color_sample.a * particle_density;
	    
	    vec += delta_dir;
	    
	    if(alpha_res <= 0.0)
			break; // Terminate if opacity > 1, or the ray is outside the volume
	}

	gl_FragColor = col_acc;
}
